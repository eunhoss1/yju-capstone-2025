<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>나의 문제 해결 방법론: 인터랙티브 포트폴리오</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Noto+Sans+KR:wght@400;500;700&display=swap" rel="stylesheet">
    <!-- Chosen Palette: Soothing Neutrals -->
    <!-- Application Structure Plan: A single-page dashboard structure with a top navigation bar for the four methodology steps (Discovery, Analysis, Solution, Improvement). This interactive tab-based approach was chosen over a linear scroll to allow non-linear exploration, letting a user (e.g., an interviewer) jump directly to the section they are most interested in. The final 'Improvement' section includes an interactive simulation to make the concept of iterative design tangible and memorable, which is a key usability goal. -->
    <!-- Visualization & Content Choices:
    - Step 1 (Problem Discovery): Goal: Show the scale of the problem. Method: A simple Chart.js line chart visualizing rising engagement with high-risk products. Interaction: Hovering reveals data points. Justification: A chart quickly conveys a trend better than text. Library: Chart.js (Canvas).
    - Step 3 (Technical Solution): Goal: Explain the solution's mechanics. Method: Interactive HTML sliders and buttons to simulate setting a limit and attempting a trade. Justification: Interaction makes the API blocking concept easy to grasp. Library: Vanilla JS + HTML.
    - Step 4 (Iterative Improvement): Goal: Demonstrate the value of iteration. Method: Clickable buttons for v1, v2, v3 that update descriptive text and a Chart.js bar chart showing the "System Risk Level" decreasing with each version. Interaction: Clicking version buttons updates chart and text dynamically. Justification: Visually represents improvement and makes the abstract concept of risk reduction concrete. Library: Chart.js (Canvas).
    - CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        body {
            font-family: 'Inter', 'Noto Sans KR', sans-serif;
            background-color: #F8F7F4;
            color: #383838;
        }
        .tab-btn {
            transition: all 0.3s ease-in-out;
        }
        .tab-btn.active {
            background-color: #3B82F6;
            color: white;
            box-shadow: 0 4px 14px 0 rgba(59, 130, 246, 0.39);
        }
        .content-section {
            display: none;
            animation: fadeIn 0.6s ease-in-out;
        }
        .content-section.active {
            display: block;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .chart-container {
            position: relative; 
            width: 100%; 
            max-width: 600px; 
            margin-left: auto; 
            margin-right: auto; 
            height: 300px;
            max-height: 400px;
        }
        @media (min-width: 768px) { 
            .chart-container { 
                height: 350px; 
            } 
        }
    </style>
</head>
<body class="antialiased">

    <div class="min-h-screen p-4 sm:p-6 lg:p-8">
        <div class="max-w-7xl mx-auto">
            
            <header class="text-center mb-10">
                <h1 class="text-3xl sm:text-4xl font-bold text-gray-800 tracking-tight">나의 문제 해결 방법론</h1>
                <p class="mt-3 text-lg text-gray-600 max-w-3xl mx-auto">사용자 중심의 점진적 개선을 통해 실질적인 가치를 만드는 개발자</p>
            </header>

            <main class="bg-white rounded-2xl shadow-lg p-6 sm:p-8">
                <nav class="grid grid-cols-2 md:grid-cols-4 gap-2 sm:gap-4 mb-8">
                    <button data-tab="1" class="tab-btn active w-full py-3 px-2 rounded-lg font-semibold text-sm sm:text-base bg-gray-100 text-gray-700 hover:bg-blue-500 hover:text-white">1. 문제 발견</button>
                    <button data-tab="2" class="tab-btn w-full py-3 px-2 rounded-lg font-semibold text-sm sm:text-base bg-gray-100 text-gray-700 hover:bg-blue-500 hover:text-white">2. 원인 분석</button>
                    <button data-tab="3" class="tab-btn w-full py-3 px-2 rounded-lg font-semibold text-sm sm:text-base bg-gray-100 text-gray-700 hover:bg-blue-500 hover:text-white">3. 기술적 해결</button>
                    <button data-tab="4" class="tab-btn w-full py-3 px-2 rounded-lg font-semibold text-sm sm:text-base bg-gray-100 text-gray-700 hover:bg-blue-500 hover:text-white">4. 점진적 개선</button>
                </nav>

                <div id="content-container">
                    
                    <section id="tab-1" class="content-section active">
                        <h2 class="text-2xl font-bold text-gray-800 mb-2">1단계: 문제 발견 (Problem Discovery)</h2>
                        <p class="text-gray-600 mb-6">모든 위대한 제품은 기술이 아닌 사람에게서 시작합니다. 저는 실생활에서 직접 사용자가 되어 '왜 불편할까?'라는 질문을 던지며, 사용자의 진짜 불편함과 필요를 포착하는 것을 문제 해결의 첫 단추로 삼습니다.</p>
                        
                        <div class="bg-blue-50 rounded-lg p-6">
                            <h3 class="font-semibold text-blue-800 mb-3">Case Study: 금융 가디언 프로젝트</h3>
                            <blockquote class="border-l-4 border-blue-500 pl-4 italic text-gray-700">
                                "레버리지/인버스 ETF와 같은 고위험 상품에 대한 직접적인 제어 시스템이 없어, 투자자들이 심리적 요인으로 큰 손실을 보는 현실적인 문제를 발견했습니다."
                            </blockquote>
                            <div class="mt-6">
                                <p class="text-center text-sm font-medium text-gray-600 mb-2">가상: 고위험 ETF 투자자 수 추이</p>
                                <div class="chart-container">
                                    <canvas id="problemChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </section>

                    <section id="tab-2" class="content-section">
                        <h2 class="text-2xl font-bold text-gray-800 mb-2">2단계: 근본 원인 분석 (Root Cause Analysis)</h2>
                        <p class="text-gray-600 mb-6">표면적인 현상에 머무르지 않고 '왜?'라는 질문을 통해 문제의 핵심을 파고듭니다. 근본 원인을 정확히 진단해야만 효과적인 해결책을 설계할 수 있습니다.</p>
                        
                        <div class="bg-green-50 rounded-lg p-6">
                            <h3 class="font-semibold text-green-800 mb-4">Case Study: 금융 가디언 프로젝트</h3>
                            <div class="grid md:grid-cols-2 gap-6">
                                <div class="border-2 border-dashed border-red-300 p-4 rounded-lg">
                                    <h4 class="font-bold text-lg text-red-700">표면적 원인 (X)</h4>
                                    <p class="text-red-600 mt-1">금융 지식 부족</p>
                                    <p class="text-sm mt-2 text-gray-500">단순 정보 제공이나 경고 메시지는 효과가 미미함.</p>
                                </div>
                                <div class="border-2 border-solid border-green-400 bg-white p-4 rounded-lg shadow">
                                    <h4 class="font-bold text-lg text-green-700">근본적 원인 (O)</h4>
                                    <p class="text-green-600 mt-1">'탐욕'과 '공포'라는 심리</p>
                                    <p class="text-sm mt-2 text-gray-500">비합리적 판단을 원천 차단할 강제적 시스템이 필요.</p>
                                </div>
                            </div>
                            <blockquote class="mt-6 border-l-4 border-green-500 pl-4 italic text-gray-700">
                                "문제의 원인은 지식 부족이 아닌 '탐욕과 공포'라는 심리적 요인이므로, 단순한 경고 메시지가 아닌 '강제적인 시스템 제어'가 근본적인 해결책이라고 판단했습니다."
                            </blockquote>
                        </div>
                    </section>
                    
                    <section id="tab-3" class="content-section">
                        <h2 class="text-2xl font-bold text-gray-800 mb-2">3단계: 기술적 해결 (Technical Solution)</h2>
                        <p class="text-gray-600 mb-6">분석된 원인을 해결할 가장 효과적이고 안정적인 기술적 해결책을 설계하고 구현합니다. 안정성, 확장성, 그리고 발생 가능한 예외 상황까지 고려하여 견고한 시스템을 만듭니다.</p>
                        
                        <div class="bg-yellow-50 rounded-lg p-6">
                            <h3 class="font-semibold text-yellow-800 mb-3">Case Study: 금융 가디언 API 시뮬레이션</h3>
                            <blockquote class="border-l-4 border-yellow-500 pl-4 italic text-gray-700 mb-6">
                                "투자 한도 및 쿨다운 시스템을 API 레벨에서 강제하여, 사용자의 충동적인 매매를 원천적으로 차단하는 백엔드 시스템을 설계했습니다."
                            </blockquote>
                            <div class="bg-white p-6 rounded-lg shadow-md">
                                <div class="mb-4">
                                    <label for="limit-slider" class="block text-sm font-medium text-gray-700">1. 연간 투자 한도 설정 (₩)</label>
                                    <input id="limit-slider" type="range" min="1000000" max="20000000" value="10000000" step="1000000" class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer">
                                    <div class="text-center font-bold text-blue-600 mt-1" id="limit-value">10,000,000원</div>
                                </div>
                                <div class="mb-4">
                                    <label for="trade-amount" class="block text-sm font-medium text-gray-700">2. 주문 금액 입력 (₩)</label>
                                    <input id="trade-amount" type="number" value="12000000" class="mt-1 block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                                </div>
                                <button id="trade-btn" class="w-full bg-blue-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-700 transition duration-300">3. 주문 실행</button>
                                <div id="trade-result" class="mt-4 text-center p-3 rounded-lg font-semibold"></div>
                            </div>
                        </div>
                    </section>

                    <section id="tab-4" class="content-section">
                        <h2 class="text-2xl font-bold text-gray-800 mb-2">4단계: 점진적 개선 (Iterative Improvement)</h2>
                        <p class="text-gray-600 mb-6">첫 번째 해결책이 끝이라고 생각하지 않습니다. 구현된 시스템을 다시 사용자의 입장에서 비판적으로 바라보고, 발생할 수 있는 또 다른 문제점을 찾아내어 더 나은 솔루션으로 끊임없이 발전시켜 나갑니다.</p>
                        
                        <div class="bg-indigo-50 rounded-lg p-6">
                             <h3 class="font-semibold text-indigo-800 mb-4">Case Study: 금융 가디언 시스템의 진화</h3>
                            <div class="flex justify-center space-x-2 sm:space-x-4 mb-6">
                                <button data-version="v1" class="version-btn bg-white text-indigo-600 border-2 border-indigo-200 font-semibold py-2 px-4 rounded-lg shadow-sm hover:bg-indigo-500 hover:text-white transition">v1</button>
                                <button data-version="v2" class="version-btn bg-white text-indigo-600 border-2 border-indigo-200 font-semibold py-2 px-4 rounded-lg shadow-sm hover:bg-indigo-500 hover:text-white transition">v2</button>
                                <button data-version="v3" class="version-btn bg-white text-indigo-600 border-2 border-indigo-200 font-semibold py-2 px-4 rounded-lg shadow-sm hover:bg-indigo-500 hover:text-white transition">v3</button>
                            </div>
                            <div class="bg-white p-6 rounded-lg shadow-inner min-h-[150px]">
                                <h4 id="version-title" class="font-bold text-lg text-indigo-700"></h4>
                                <p id="version-desc" class="mt-2 text-gray-600"></p>
                            </div>
                             <div class="mt-6">
                                <p class="text-center text-sm font-medium text-gray-600 mb-2">버전별 시스템 리스크 수준 비교</p>
                                <div class="chart-container">
                                    <canvas id="improvementChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
                
                <footer class="mt-10 text-center text-sm text-gray-500">
                    <p>이러한 접근 방식을 통해, 저는 단순히 버그를 수정하거나 기능을 추가하는 것을 넘어,</p>
                    <p class="font-semibold text-gray-700">사용자와 비즈니스에 실질적인 가치를 제공하는 제품을 만드는 개발자가 되는 것을 목표로 합니다.</p>
                </footer>
            </main>
        </div>
    </div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const tabs = document.querySelectorAll('.tab-btn');
    const contents = document.querySelectorAll('.content-section');
    const versionButtons = document.querySelectorAll('.version-btn');

    let problemChartInstance, improvementChartInstance;

    const versionData = {
        v1: {
            title: "v1: 수동 초기화",
            description: "가장 빠른 해결책이지만, 개발자 개입으로 인한 지연 리스크가 존재합니다. 위기 상황에서 신속한 대응이 어려워 고객 불만이 폭주할 수 있습니다.",
            risk: 90
        },
        v2: {
            title: "v2: 시간 기반 자동화",
            description: "v1의 리스크를 해결했지만, 실제 시장 상황과 무관하게 동작하는 유연성 부족 문제가 있습니다. 시장이 안정화되어도 불필요한 제한이 유지될 수 있습니다.",
            risk: 50
        },
        v3: {
            title: "v3: 데이터 기반 자동화",
            description: "최종적으로 '실시간 거래량' 데이터와 연동하여, 시장 상황에 지능적으로 반응하는 최적의 해결책입니다. 시스템이 스스로 상황을 판단하여 투자자 보호와 편의성 사이의 균형을 맞춥니다.",
            risk: 15
        }
    };

    function switchTab(tabNumber) {
        tabs.forEach(tab => {
            tab.classList.toggle('active', tab.dataset.tab === tabNumber);
        });
        contents.forEach(content => {
            content.classList.toggle('active', content.id === `tab-${tabNumber}`);
        });

        if (tabNumber === '1') {
            renderProblemChart();
        }
        if (tabNumber === '4') {
            renderImprovementChart();
            updateVersionContent('v1');
            versionButtons.forEach(btn => btn.classList.remove('bg-indigo-500', 'text-white'));
            document.querySelector('.version-btn[data-version="v1"]').classList.add('bg-indigo-500', 'text-white');
        }
    }

    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            switchTab(tab.dataset.tab);
        });
    });

    function renderProblemChart() {
        const ctx = document.getElementById('problemChart');
        if (!ctx) return;
        if (problemChartInstance) {
            problemChartInstance.destroy();
        }
        problemChartInstance = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ['2021', '2022', '2023', '2024', '2025'],
                datasets: [{
                    label: '투자자 수 (만 명)',
                    data: [25, 45, 75, 110, 180],
                    borderColor: 'rgba(59, 130, 246, 0.8)',
                    backgroundColor: 'rgba(59, 130, 246, 0.1)',
                    fill: true,
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return ` ${context.raw}만 명`;
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        title: { display: true, text: '투자자 수' }
                    }
                }
            }
        });
    }

    function renderImprovementChart() {
        const ctx = document.getElementById('improvementChart');
        if (!ctx) return;
        if (improvementChartInstance) {
            improvementChartInstance.destroy();
        }
        improvementChartInstance = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['v1', 'v2', 'v3'],
                datasets: [{
                    label: '시스템 리스크',
                    data: [versionData.v1.risk, versionData.v2.risk, versionData.v3.risk],
                    backgroundColor: [
                        'rgba(239, 68, 68, 0.6)',
                        'rgba(245, 158, 11, 0.6)',
                        'rgba(16, 185, 129, 0.6)'
                    ],
                    borderColor: [
                        'rgba(239, 68, 68, 1)',
                        'rgba(245, 158, 11, 1)',
                        'rgba(16, 185, 129, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 100,
                        title: { display: true, text: '리스크 수준 (0-100)' }
                    }
                }
            }
        });
    }

    function setupTradeSimulator() {
        const slider = document.getElementById('limit-slider');
        const limitValue = document.getElementById('limit-value');
        const tradeAmountInput = document.getElementById('trade-amount');
        const tradeBtn = document.getElementById('trade-btn');
        const tradeResult = document.getElementById('trade-result');

        const formatCurrency = (value) => new Intl.NumberFormat('ko-KR').format(value) + '원';

        slider.addEventListener('input', (e) => {
            limitValue.textContent = formatCurrency(e.target.value);
        });

        tradeBtn.addEventListener('click', () => {
            const limit = parseInt(slider.value);
            const tradeAmount = parseInt(tradeAmountInput.value);

            tradeResult.classList.remove('bg-red-100', 'text-red-700', 'bg-green-100', 'text-green-700');

            if (tradeAmount > limit) {
                tradeResult.textContent = `주문 실패: 한도 초과입니다. (주문 금액: ${formatCurrency(tradeAmount)})`;
                tradeResult.classList.add('bg-red-100', 'text-red-700');
            } else {
                tradeResult.textContent = `주문 성공! (주문 금액: ${formatCurrency(tradeAmount)})`;
                tradeResult.classList.add('bg-green-100', 'text-green-700');
            }
        });
    }
    
    function updateVersionContent(version) {
        const data = versionData[version];
        document.getElementById('version-title').textContent = data.title;
        document.getElementById('version-desc').textContent = data.description;
        
        if (improvementChartInstance) {
            improvementChartInstance.data.datasets[0].data = [
                version === 'v1' ? data.risk : 0, 
                version === 'v2' ? data.risk : 0, 
                version === 'v3' ? data.risk : 0
            ];
            const fullData = [versionData.v1.risk, versionData.v2.risk, versionData.v3.risk];
            const backgroundColors = [
                'rgba(239, 68, 68, 0.2)',
                'rgba(245, 158, 11, 0.2)',
                'rgba(16, 185, 129, 0.2)'
            ];
            
            if (version === 'v1') backgroundColors[0] = 'rgba(239, 68, 68, 0.7)';
            if (version === 'v2') backgroundColors[1] = 'rgba(245, 158, 11, 0.7)';
            if (version === 'v3') backgroundColors[2] = 'rgba(16, 185, 129, 0.7)';
            
            improvementChartInstance.data.datasets[0].data = fullData;
            improvementChartInstance.data.datasets[0].backgroundColor = backgroundColors;
            improvementChartInstance.update();
        }
    }
    
    versionButtons.forEach(button => {
        button.addEventListener('click', () => {
            const version = button.dataset.version;
            versionButtons.forEach(btn => btn.classList.remove('bg-indigo-500', 'text-white'));
            button.classList.add('bg-indigo-500', 'text-white');
            updateVersionContent(version);
        });
    });

    switchTab('1');
    setupTradeSimulator();
});
</script>

</body>
</html>
